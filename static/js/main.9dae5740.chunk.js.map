{"version":3,"sources":["components/background.js","helpers.js","components/ground.js","components/controller.js","components/player.js","App.js","index.js"],"names":["Background","Sky","distance","turbidity","rayleigh","mieCoefficient","mieDirectionalG","inclination","azimuth","MAX_POLAR_ANGLE","Math","PI","ASSETS_PATH","process","Ground","useTexture","floor","normal","usePlane","position","rotation","ref","Reflector","resolution","args","mirror","mixBlur","mixStrength","blur","Material","props","color","metalness","roughnessMap","normalMap","normalScale","Controller","onAttack","onMoveChanged","onSpeedChanged","onKeyDown","event","preventDefault","key","type","direction","w","s","a","d","selected","onKeyUp","onClick","target","document","querySelector","loopAnimations","attackAnimations","Player","orbitRef","useRef","player","walkClock","THREE","comboResetTimer","movements","isRunning","attack","combo","isAttackInProgress","useState","selectedAction","setSelectedAction","model","useFBX","idle","useAnimationLoader","kick","smallSlash","snipSlash","walk","run","useAnimations","animations","usePlayerAnimations","actions","mixer","useEffect","scale","x","multiplyScalar","current","rotateSpeed","animation","addEventListener","reset","fadeIn","includes","setLoop","setEffectiveTimeScale","play","clampWhenFinished","fadeOut","useFrame","clone","setY","length","positions","verticalSpeed","lerp","min","getElapsedTime","z","applyAxisAngle","getAzimuthalAngle","y","add","isAttackAnimation","time","duration","getClip","object","dispose","OrbitControls","maxPolarAngle","maxDistance","enableDamping","enablePan","directions","Set","startSize","size","running","start","delete","setTimeout","stop","values","clearTimeout","name","Cube","useBox","mass","App","fallback","className","mode","linear","dpr","camera","near","far","fov","intensity","angle","ContactShadows","width","height","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9dae5740.chunk.js","sourcesContent":["import { Sky } from '@react-three/drei';\n\nexport function Background() {\n  return (\n    <Sky\n      distance={3000}\n      turbidity={8}\n      rayleigh={6}\n      mieCoefficient={0.005}\n      mieDirectionalG={0.8}\n      inclination={0.49}\n      azimuth={0.25}\n    />\n  );\n}\n","export const MAX_POLAR_ANGLE = Math.PI / 2 - 0.1;\nexport const ASSETS_PATH = process.env.PUBLIC_URL + '/assets';\n","import { usePlane } from '@react-three/cannon';\nimport { Reflector, useTexture } from '@react-three/drei';\nimport { ASSETS_PATH } from '../helpers';\n\nexport function Ground() {\n  const [floor, normal] = useTexture([\n    `${ASSETS_PATH}/textures/ground-texture-skin.jpg`,\n    `${ASSETS_PATH}/textures/ground-texture-color.jpg`,\n  ]);\n\n  const [ref] = usePlane(() => ({\n    position: [0, -0.01, 0],\n    rotation: [-Math.PI / 2, 0, 0],\n  }));\n\n  return (\n    <Reflector\n      resolution={512}\n      ref={ref}\n      args={[100, 100, 4, 4]}\n      mirror={0.4}\n      mixBlur={8}\n      mixStrength={1}\n      rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      blur={[400, 100]}\n    >\n      {(Material, props) => (\n        <Material\n          color='#797979'\n          metalness={0.4}\n          roughnessMap={floor}\n          normalMap={normal}\n          normalScale={[1, 1]}\n          {...props}\n        />\n      )}\n    </Reflector>\n  );\n}\n","import EventListener from 'react-event-listener';\n\nexport function Controller({ onAttack, onMoveChanged, onSpeedChanged } = {}) {\n  const onKeyDown = (event) => {\n    event.preventDefault();\n\n    switch (event.key) {\n      case 'w':\n      case 'a':\n      case 's':\n      case 'd':\n        const movementMap = {\n          w: 'forward',\n          s: 'backward',\n          a: 'left',\n          d: 'right',\n        };\n        onMoveChanged?.({ type: 'start', direction: movementMap[event.key] });\n        break;\n      case 'Shift':\n        onSpeedChanged?.({ type: 'run', selected: true });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onKeyUp = (event) => {\n    event.preventDefault();\n\n    switch (event.key) {\n      case 'w':\n      case 'a':\n      case 's':\n      case 'd':\n        const movementMap = {\n          w: 'forward',\n          s: 'backward',\n          a: 'left',\n          d: 'right',\n        };\n        onMoveChanged?.({ type: 'end', direction: movementMap[event.key] });\n        break;\n      case 'Shift':\n        onSpeedChanged?.({ type: 'run', selected: false });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  function onClick(event) {\n    event.preventDefault();\n    onAttack();\n  }\n\n  return (\n    <>\n      <EventListener target='window' onKeyDown={onKeyDown} onKeyUp={onKeyUp} />\n      <EventListener target={document.querySelector('.main-canvas')} onClick={onClick} />\n    </>\n  );\n}\n","import { OrbitControls, useAnimations, useFBX } from '@react-three/drei';\nimport { useFrame } from '@react-three/fiber';\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { lerp } from 'three/src/math/MathUtils';\nimport { ASSETS_PATH, MAX_POLAR_ANGLE } from '../helpers';\nimport { Controller } from './controller';\n\nconst loopAnimations = ['idle', 'walk', 'run'];\nconst attackAnimations = ['small-slash', 'kick', 'spin-slash'];\nconst blendDuration = 0.5;\n\nexport function Player({ ...props }) {\n  const orbitRef = useRef();\n  const player = useRef({\n    walkClock: new THREE.Clock(),\n    comboResetTimer: null,\n    movements: [],\n    isRunning: false,\n    attack: { combo: 0, isAttackInProgress: false },\n  });\n\n  const [selectedAction, setSelectedAction] = useState();\n  const model = useFBX(`${ASSETS_PATH}/models/player.fbx`);\n  const { actions, mixer } = usePlayerAnimations(model);\n\n  useEffect(() => {\n    const size = 0.02;\n    if (model.scale.x > size) {\n      model.scale.multiplyScalar(size);\n    }\n\n    // orbitRef.current.dampingFactor = 0.5; // friction\n    orbitRef.current.rotateSpeed = 0.3; // mouse sensitivity\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const selected = selectedAction || 'idle';\n    const animation = actions[selected];\n    const isIdle = selected === 'idle';\n\n    if (!isIdle) {\n      mixer.addEventListener('finished', (event) => {\n        setSelectedAction(null);\n      });\n    }\n\n    animation\n      ?.reset()\n      .fadeIn(loopAnimations.includes(selected) ? blendDuration : 0.1)\n      .setLoop(loopAnimations.includes(selected) ? THREE.LoopRepeat : THREE.LoopOnce)\n      .setEffectiveTimeScale(loopAnimations.includes(selected) ? 1 : 1.2)\n      .play();\n\n    animation.clampWhenFinished = true;\n\n    return () => {\n      animation?.fadeOut(blendDuration);\n    };\n  }, [selectedAction, actions, mixer]);\n\n  useFrame(() => {\n    orbitRef.current.target = model.position.clone().setY(2.5);\n\n    // WALK\n    if (player.current.movements.length) {\n      setSelectedAction(player.current.isRunning ? 'run' : 'walk');\n    } else if (!player.current.movements.length && !player.current.attack.isAttackInProgress) {\n      setSelectedAction(null);\n    }\n\n    const positions = new THREE.Vector3();\n    const verticalSpeed = lerp(\n      0,\n      player.current.isRunning ? 0.15 : 0.08,\n      Math.min(player.current.walkClock.getElapsedTime(), 1),\n    );\n    const horizontalSpeed = 0.02;\n\n    if (!player.current.attack.isAttackInProgress) {\n      for (const movement of player.current.movements) {\n        switch (movement) {\n          case 'backward':\n            positions.z += verticalSpeed;\n            break;\n          case 'forward':\n            positions.z += -verticalSpeed;\n            break;\n          case 'right':\n            positions.x += horizontalSpeed;\n            break;\n          case 'left':\n            positions.x += -horizontalSpeed;\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n\n    positions.applyAxisAngle(new THREE.Vector3(0, 1, 0), orbitRef.current.getAzimuthalAngle());\n    model.rotation.y = orbitRef.current.getAzimuthalAngle() + Math.PI;\n    model.position.add(positions);\n\n    // ATTACK\n    const isAttackAnimation = attackAnimations.includes(selectedAction);\n    const time = actions[selectedAction]?.time;\n    const duration = actions[selectedAction]?.getClip().duration;\n\n    if ((isAttackAnimation && time > duration - duration * 0.02) || !isAttackAnimation) {\n      player.current.attack.isAttackInProgress = false;\n    }\n  });\n\n  return (\n    <>\n      <primitive object={model} dispose={null} />\n      <OrbitControls\n        ref={orbitRef}\n        maxPolarAngle={MAX_POLAR_ANGLE}\n        maxDistance={5}\n        enableDamping={false}\n        enablePan={false}\n      />\n      <Controller\n        onSpeedChanged={({ type, selected }) => {\n          if (type === 'run') {\n            player.current.isRunning = selected;\n            setSelectedAction(selected ? 'run' : null);\n          }\n        }}\n        onMoveChanged={({ type, direction }) => {\n          const directions = new Set(player.current.movements);\n          const startSize = directions.size;\n\n          if (!player.current.walkClock.running) {\n            player.current.walkClock.start();\n          }\n\n          if (type === 'end') {\n            directions.delete(direction);\n          } else if (type === 'start') {\n            directions.add(direction);\n          }\n\n          if (startSize !== directions.size) {\n            setTimeout(() => {\n              player.current.walkClock.stop();\n            }, 100);\n          }\n\n          player.current.movements = [...directions.values()];\n        }}\n        onAttack={() => {\n          if (player.current.comboResetTimer) {\n            clearTimeout(player.current.comboResetTimer);\n          }\n\n          player.current.comboResetTimer = setTimeout(() => {\n            player.current.attack.combo = 0;\n          }, 1000);\n\n          if (player.current.attack.isAttackInProgress) return;\n\n          let current = player.current.attack.combo;\n          switch (current) {\n            case 0:\n              setSelectedAction('small-slash');\n              break;\n            case 1:\n              setSelectedAction('kick');\n              break;\n            case 2:\n              setSelectedAction('spin-slash');\n              break;\n\n            default:\n              break;\n          }\n          player.current.attack.combo = current >= 2 ? 0 : current + 1;\n          player.current.attack.isAttackInProgress = true;\n        }}\n      />\n    </>\n  );\n}\n\nfunction usePlayerAnimations(model) {\n  const idle = useAnimationLoader('idle');\n  const kick = useAnimationLoader('kick');\n  const smallSlash = useAnimationLoader('small-slash');\n  const snipSlash = useAnimationLoader('spin-slash');\n  const walk = useAnimationLoader('walk');\n  const run = useAnimationLoader('run');\n\n  return useAnimations(\n    [\n      ...run.animations,\n      ...idle.animations,\n      ...kick.animations,\n      ...smallSlash.animations,\n      ...snipSlash.animations,\n      ...walk.animations,\n    ],\n    model,\n  );\n}\n\nfunction useAnimationLoader(name) {\n  const animation = useFBX(`${ASSETS_PATH}/models/animations/${name}.fbx`);\n  animation.animations[0].name = name;\n\n  return animation;\n}\n","import { Physics, useBox } from '@react-three/cannon';\nimport { ContactShadows, Loader } from '@react-three/drei';\nimport { Canvas } from '@react-three/fiber';\nimport { Suspense } from 'react';\nimport { Background } from './components/background';\nimport { Ground } from './components/ground';\nimport { Player } from './components/player';\n\nfunction Cube(props) {\n  const [ref] = useBox(() => ({ mass: 1, position: [0.5, 15, 0], ...props }));\n  return (\n    <mesh ref={ref}>\n      <boxBufferGeometry />\n    </mesh>\n  );\n}\nfunction App() {\n  return (\n    <Suspense fallback={null}>\n      <Canvas\n        className='main-canvas'\n        mode='concurrent'\n        linear\n        dpr={[1, 1.5]}\n        camera={{\n          position: [0, 0, 10],\n          near: 0.01,\n          far: 10000,\n          fov: 70,\n        }}\n      >\n        <ambientLight intensity={0.5} />\n        <spotLight position={[10, 55, 10]} angle={1} />\n        <ContactShadows\n          position={[0, 0, 0]}\n          width={100}\n          height={20}\n          far={20}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n\n        <Physics>\n          <Cube />\n          <Ground />\n          <Background />\n          <Player />\n        </Physics>\n      </Canvas>\n      <Loader />\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}