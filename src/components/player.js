/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react';
import { useGLTF, useAnimations, useMatcapTexture } from '@react-three/drei';

export function Player({ ...props }) {
  const group = useRef();
  const blendDuration = 0.5;
  const [selectedAction, setSelectedAction] = useState('Idle');
  const { nodes, materials, animations } = useGLTF('/assets/models/player.glb');
  const { actions } = useAnimations(animations, group);
  const [matcapBody] = useMatcapTexture('293534_B2BFC5_738289_8A9AA7', 1024);
  const [matcapJoints] = useMatcapTexture('3A2412_A78B5F_705434_836C47', 1024);

  useEffect(() => {
    actions[selectedAction]?.reset().fadeIn(blendDuration).play();

    return () => void actions[selectedAction]?.fadeOut(blendDuration);
  }, [actions, blendDuration, selectedAction]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh
          geometry={nodes.YB_Body.geometry}
          material={materials.YB_Body}
          skeleton={nodes.YB_Body.skeleton}
        >
          <meshMatcapMaterial attach='material' matcap={matcapBody} skinning={true} />
        </skinnedMesh>
        <skinnedMesh
          geometry={nodes.YB_Joints.geometry}
          material={materials.YB_Joints}
          skeleton={nodes.YB_Joints.skeleton}
        >
          <meshMatcapMaterial attach='material' matcap={matcapJoints} skinning={true} />
        </skinnedMesh>
      </group>
    </group>
  );
}
